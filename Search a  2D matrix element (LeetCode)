def searchMatrix( matrix, target):
        #Searching Row
        def bin_search(A,l,r,target):
            if l<=r:
                mid=(l+r)//2
                if A[mid]==target:
                    return mid 
                if A[mid]>target:
                    return bin_search(A,l,mid-1,target)
                else:
                    return bin_search(A,mid+1,r,target)
            else:
                return min(l,r)
        A=[]
        for i in range(len(matrix)):
            A.append(matrix[i][0])
        row=bin_search(A,0,len(matrix)-1,target)
        
        #Searching element in that particular row
        def bin_search_2(A,l,r,target):
            if l<=r:
                mid=(l+r)//2
                if A[mid]==target:
                    return 1 
                if A[mid]>target:
                    return bin_search_2(A,l,mid-1,target)
                else:
                    return bin_search_2(A,mid+1,r,target)
            else:
                return 0
        A=matrix[row]
        if bin_search_2(A,0,len(matrix[0])-1,target):
            return True 
        else:
            return False
matrix=[[1]]
target=1
print(searchMatrix(matrix,target))
        
